services:
  backend:
    build: 
      context: ./frontend./backend
    image: ${DOCKER_USER}/docker-project-backend:${VERSION:-latest}
    networks:
      - back_net
    # Ресурсы аналогично requests и limits в k8s
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    restart: unless-stopped
    healthcheck:
        test: ["CMD-SHELL", "nc -z localhost 8081 || exit 1"]
        interval: 30s
        timeout: 10s
        retries: 3
        start_period: 30s
    # Безопасность:
    read_only: true
    expose:
      - "8081"
    cap_drop:
      - ALL
    user: "65532:65532"

  frontend:
    build:
      context: ./frontend
      args:
        VUE_APP_API_URL: "/api"
    image: ${DOCKER_USER}/docker-project-frontend:${VERSION:-latest}
    depends_on: 
      backend:
        condition: service_healthy         
    networks:
      - front_net
    # Ресурсы аналогично requests и limits в k8s
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: "0.25"
          memory: 128M
        reservations:
          cpus: "0.1"
          memory: 64M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    restart: unless-stopped
    expose:
      - "80"
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O /dev/null http://localhost/momo-store/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    cap_drop:
      - ALL
    user: "1001:1001"
    profiles: ["development", "production"]
    

  nginx:
    image: nginx:1.25-alpine
    container_name: nginx_proxy
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    networks:
      - front_net
      - back_net
    ports:
      - "${NGINX_PORT:-80}:80"
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: 256M
        reservations:
          cpus: "0.1"
          memory: 128M
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - proxy-cache:/var/cache/nginx:rw
      - proxy-run:/var/run:rw
    restart: unless-stopped
    profiles: ["production"]

networks:
  front_net:
    driver: bridge
  back_net:
    driver: bridge

volumes:
  proxy-cache:
  proxy-run: